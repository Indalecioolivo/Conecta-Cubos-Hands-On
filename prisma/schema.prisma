generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  token     String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Meet Meet[]
}

model Manager {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Meet Meet[]
}

model Meet {
  id                Int      @id @default(autoincrement())
  managerId         Int
  adminId           Int
  name              String
  description       String
  dateTime          DateTime
  link              String?
  address           String?
  zipcode           String
  city              String
  stateOfCity       String
  complement        String?
  lectureTime       DateTime
  listLectureEmails String
  statusEvent       String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  manager Manager @relation(fields: [managerId], references: [id])
  admin   Admin   @relation(fields: [adminId], references: [id])

  Lecture Lecture[]
}

model Lecture {
  id              Int           @id @default(autoincrement())
  meetId          Int
  speakerName     String
  speakerLinkedIn String
  speakerEmail    String
  speakerAbout    String
  title           String
  description     String
  timeDate        DateTime
  statusLecture   StatusLecture

  meet Meet @relation(fields: [meetId], references: [id])
}

enum StatusLecture {
  PENDING_APPROVAL
  CANCELED
  IN_PROGRESS
  COMPLETED
}
